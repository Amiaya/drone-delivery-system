openapi: 3.0.3
info:
  title: Drone Delivery API
  version: 1.0.0
  description: >
    REST API for managing drones, medications, and orders in a drone delivery system.

servers:
  - url: http://localhost:3005/api/v1
    description: Local development server

tags:
  - name: Drones
    description: Drone management endpoints
  - name: Medications
    description: Medication management endpoints
  - name: Orders
    description: Order management and drone loading endpoints

paths:
  /drones:
    get:
      summary: Retrieve list of drones (supports filtering & pagination)
      tags:
        - Drones
      parameters:
        - in: query
          name: serial_number
          schema:
            type: string
          description: Filter by serial number (exact match)
        - in: query
          name: model
          schema:
            type: string
            enum:
              ["lightweight", "middleweight", "cruiserweight", "heavyweight"]
          description: Filter by drone model
        - in: query
          name: state
          schema:
            type: string
            enum:
              [
                "idle",
                "loading",
                "loaded",
                "delivering",
                "delivered",
                "returning",
              ]
          description: Filter by drone state
        - in: query
          name: is_available
          schema:
            type: boolean
          description: Filter only available drones
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
          description: Pagination limit
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Pagination offset
        - in: query
          name: order_by
          schema:
            type: string
            example: created_at
          description: Field to order by
        - in: query
          name: order
          schema:
            type: string
            enum: ["asc", "desc"]
            default: desc
          description: Order direction
      responses:
        "200":
          description: A paginated list of drones
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Drone"
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 100
                      limit:
                        type: integer
                        example: 25
                      offset:
                        type: integer
                        example: 0
        "400":
          description: Invalid query parameters

  /drones/{id}:
    get:
      summary: Retrieve a drone by ID
      tags:
        - Drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Drone UUID
      responses:
        "200":
          description: Drone details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found

  /drones/{id}/ready:
    post:
      summary: Mark a loaded drone as ready for delivery (transition to 'delivering')
      tags:
        - Drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Drone UUID
      responses:
        "200":
          description: Drone state updated to 'delivering'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "404":
          description: Drone not found
        "422":
          description: Drone not in 'loaded' state (unprocessable state transition)

  /drones/{id}/{action}:
    post:
      summary: Load or unload a drone (allowed actions load, unload)
      tags:
        - Drones
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Drone UUID
        - in: path
          name: action
          required: true
          schema:
            type: string
            enum: ["load", "unload"]
          description: Action to perform on the drone
      responses:
        "200":
          description: Drone state updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Drone"
        "400":
          description: Bad request (e.g., battery too low to load)
        "404":
          description: Drone not found
        "422":
          description: Invalid state transition (e.g., unloading a drone that's not in loading state)

  /medications:
    get:
      summary: Retrieve all medications
      tags: [Medications]
      parameters:
        - in: query
          name: medication_name
          schema:
            type: string
        - in: query
          name: code
          schema:
            type: string
      responses:
        "200":
          description: List of medications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Medication"

    post:
      summary: Create a new medication
      tags: [Medications]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MedicationDTO"
      responses:
        "201":
          description: Medication created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medication"
        "409":
          description: Duplicate medication error

  /medications/{id}:
    get:
      summary: Retrieve a medication by ID
      tags: [Medications]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Medication found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Medication"
        "404":
          description: Medication not found

  /orders:
    post:
      summary: Create a new order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicationOrder"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Drone not in loading state or weight limit exceeded
        "404":
          description: Drone or medication not found

  /orders/{id}/details:
    get:
      summary: Get details of an order
      tags: [Orders]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order details with medication list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderDetails"
        "404":
          description: Order not found

components:
  schemas:
    Drone:
      type: object
      properties:
        id:
          type: string
        serial_number:
          type: string
          example: DRN-2025-0001
        model:
          type: string
          example: Lightweight
        weight_limit:
          type: integer
          example: 400
        battery_capacity:
          type: integer
          example: 90
        state:
          type: string
          enum: [idle, loading, loaded, delivering, delivered, returning]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    DroneDTO:
      type: object
      required: [serial_number, model, weight_limit, battery_capacity]
      properties:
        serial_number:
          type: string
        model:
          type: string
        weight_limit:
          type: integer
          example: 500
        battery_capacity:
          type: integer
          example: 100

    Medication:
      type: object
      properties:
        id:
          type: string
        medication_name:
          type: string
          example: Paracetamol
        weight:
          type: number
          example: 50
        image:
          type: string
          example: https://res.cloudinary.com/drug/paracetamol.jpg
        code:
          type: string
          example: MED-2025-0001

    MedicationDTO:
      type: object
      required: [medication_name, weight, image]
      properties:
        medication_name:
          type: string
        weight:
          type: number
        image:
          type: string
          format: binary

    Order:
      type: object
      properties:
        id:
          type: string
        drone_id:
          type: string
        status:
          type: string
          enum: [pending, successful, aborted, delivered, failed]
        total_weight:
          type: number
          example: 200
        created_at:
          type: string
          format: date-time

    Item:
      type: object
      properties:
        medication_id:
          type: string
        quantity:
          type: integer
          example: 2

    MedicationOrder:
      type: object
      required: [drone_id, items]
      properties:
        drone_id:
          type: string
          example: "uuid-of-drone"
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"

    OrderDetails:
      allOf:
        - $ref: "#/components/schemas/Order"
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/OrderMedication"

    OrderMedication:
      type: object
      properties:
        order_id:
          type: string
        medication_id:
          type: string
        quantity:
          type: integer
        metadata:
          type: object
          properties:
            medication_name:
              type: string
              example: Paracetamol
            drone_name:
              type: string
              example: Drone-A1
